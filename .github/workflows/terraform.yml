name: 'Deploy App'

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout code
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      
    - name: Deploy App
      run: |
        cd server
        git pull origin main
        echc "pulled latest"
        node server.js
        echo "Started node.js server"
    - name: Deploy Static
      run:
        cd public
        git pull origin main
        cp -R * /home/opc/Public/index.html
        
    - name: Deploy Application to OCI linux Instance
      run: |
        ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY opc@150.136.119.109

    - name: Notify deployment status
      run: echo "Deployment complete"
      
